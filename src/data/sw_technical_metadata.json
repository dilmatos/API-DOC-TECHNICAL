{
  "openapi": "3.0.0",
  "info": {
    "title": "Technical Metadata",
    "description": "API Documentation Regarding Technical Metadata.\n\nThis API will provide the information to send technical metadata to our BrewQuest portal.\n\nThe API will receive technical information of tables and their columns, such as datatype, length, if it is a business key, primary key, foreign key, if it has data masking, if it has a partition!\n\nSome useful links:\n[BrewQuest Data Management](https://brewdatportal.ab-inbev.com/datamesh-ui/DataAsset)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://abi-apim-brewdat-tech-metadata.azure-ai.net"
    }
  ],
  "paths": {
    "/api-docs-tech": {
      "post": {
        "summary": "Insert in BrewQuest",
        "tags": ["Technical Metadata"],
        "requestBody": {
          "description": "Technical Metadata",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "headerBusinessMetadataStrucutre": {
                "dlz"              : "BEES",
                "zone"             : "AFR",
                "businessDomain"   : "Customer",
                "businessSubDomain": "-",
                "subRegion"        : "-",
                "dataProduct"      : "Sap",
                "schemaName"          : "brz_bees_sales_files",
                "dataCatalogName"     : "brewdat_uc_bees_qa",
                "tableName"           : "gh_customer"
                },
                "technicalMetadataStructure": {
                  "objectType":  "Table",
                "TableAttributes":{
                  "tableCalassification": "Cadastral",
                  "tableType"           : "External"
                  },
                  "ColumnAttributes": [
                    {
                      "columnName"           : "customer_nm",
                        "datatype"           : "string",
                        "lengthColumn"       : "50",
                        "isBusinessKey"      : "No",
                        "businessKeyName"    : "",
                        "isPrimaryKey"       : "No",
                        "primaryKeyName"     : "",
                        "isForeignKey"       : "No",
                        "foreignKeyName"     : "",
                        "hasDataMasking"     : "No",
                        "dataMaskingFormat"  : "",
                        "hasPartition"       : "No",
                        "dataPartitionFormat": ""                       
                  }
                ]
              }
            }
          } 
       }
      },        
            "responses": 
            {
              "200": {
                "description": "Successful response - Header",
                "content": {
                  "application/json": {
                    "schema": {"$ref": "#/components/schemas/HeaderTechnicalMetadata"},
                    "example": {"message": "Request processed successfully!"}
                  }
                }
              },
              "201": {
                "description": "Successful response - Body",
                "content": {
                  "application/json": {
                    "schema": {"$ref": "#/components/schemas/TechnicalMetadata"},
                    "example": {"message": "Request processed successfully!"}
                  }
                }
              },
              "500": {
                "description": "Internal server error",
                "content": {
                  "application/json": {
                    "example": {
                      "error": "An internal error has occurred."
                    }
                  }
                }
              },
              "400": {
                "description": "Invalid value",
                "content": {
                  "application/json": {
                    "schema": {"$ref": "#/components/schemas/Validation"},
                    "example": {"message": "Invalid value."}
                    }
                }
              }
            }
      } 
    }
  },
     "components": 
      {
          "schemas": {
            "HeaderTechnicalMetadata": {
              "type": "object",
              "properties": {
                "objecType": {"type": "string", "description": "Object Type. Ex: table"},
                "dlz": {"type": "string", "description": "DLZ Abbreviation", "enum": ["AFR","ANLT","APC","AUR", "BEES","BRWR", "EUR", "GHQ", "GHQML",  "IL",  "LOLA", " MRTC",  "MAZ", "MAZML",  " MGMT", "MLPLT", "NAZ", "PPLE", "PLTL", " PRTL", "SPLYC", "NCSA"]},
                "zone": {"type": "string", "description": "Abbreviation for Zones","enum": ["AFR", "APC", "EUR", "GHQ", "MAZ", "NAZ", "SAZ"]},
                "businessDomain": {"type": "string", "description": "The business domains that are part of the Entity and the Attribute","enum":["Audit", "Common", "Customer", "Finance", "Geo", "Legal", "Logistics", "Marketing", "Order", "People", "Procurement", "Product", "Promotion", "Sales", "Supply", "Technology"]},
                "businessSubDomain": {"type": "string", "description": "The business sub-domains that are part of the DB"},
                "subRegion": {"type": "string", "description": "Subregion that a country may have."},
                "dataProduct": {"type": "string", "description": "Origin data source name"},
                "dataCatalogName":{"type": "string", "description": "Catalog Name"},
                "schemaName": {"type": "string", "description": "The name of the database source schemas that we will receive the information from"},
                "tableName": {"type": "string", "description": "Table name"}
              },
              "required": ["ObjectType", "dlz", "zone", "business_domain", "dataProduct", "dataCatalogName", "schemaName", "tableName"]
            },
            "TechnicalMetadata": {
              "type": "object",
              "properties": {
                "objectType": {"type": "string", "description": "Identifies the type of object, such as table or file (Defaults  = Table)", "enum": ["File", "Table"]},
                "attributes": {"$ref": "#/components/schemas/TableAttributes"},
                "columns": {"$ref": "#/components/schemas/ColumnAttributes"}
              }
            },
            "TableAttributes": {
              "type": "object",
              "properties": {
                "tableClassification": {"type": "string", "description": "The table Classification will inform whether the table refers to Cadastral or Transactional data.", "enum": ["Cadastral", "Transactional", "Fact", "Dimension"]},
                "tableType": {"type": "string", "description": "The table type will show us whether the table is Internal or External this is a type inside UC", "enum": ["Internal", "External"]}
              }
            },
            "ColumnAttributes": {
              "type": "object",
              "properties": {
                   "columnName": {"type": "string", "description": "Column name"},
                   "datatype": {"type": "string", "description": "Column datatype (string/int/etc.)", "enum": ["integer", "varchar", "Blob", "Lob", "Decimal", "Float", "Char"]},
                    "lengthColumn": {"type": "string", "description": "Informs the size of the information that the field will store."},
                    "isBusinessKey": {"type": "string", "description": "Indicator if the field is a business key.", "enum": ["Yes", "No"]},
                    "businessKeyName": {"type": "string", "description": "Business key name"},
                    "isPrimaryKey": {"type": "string", "description": "Indicator if the field is a primary key (unique)", "enum": ["Yes", "No"]},
                    "primaryKeyName": {"type": "string", "description": "Primary key name"},
                    "isForeignKey": {"type": "string", "description": "Indicator if the field is foreign, that is, it comes from another table.", "enum": ["Yes", "No"]},
                    "foreignKeyName": {"type": "string", "description": "Foreign key name"},
                    "hasDataMasking": {"type": "string", "description": "Indicates whether the field has data masking.", "enum": ["Yes", "No"]},
                    "dataMaskingformat": {"type": "string", "description": "The field masking format"},
                    "hasPartition": {"type": "string", "description": "Indicates whether the field is a partition.", "enum": ["Yes", "No"]},
                    "dataPartitionFormat": {"type": "string", "description": "Enter the partition format."}
              },
              "required": ["columnName", "datatype", "lengthColumn", "isPrimaryKey", "primaryKeyName"] 
            },
            "Validation": {
              "type": "object",
              "properties": {
                "code": {"type": "integer","format": "int32"},
                "type": {"type": "string"},
                "message": {"type": "string"
                }
              }
            }
          }      
        }    
    } 


      
  
